{"ast":null,"code":"var _jsxFileName = \"/home/asad/Cloud-Computing/Quarter 3/Class 04 01-august-2021/2. API_with_react_with_graphql/src/githubGraphQL4.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  method: 'get',\n  responseType: 'json',\n  baseURL: 'https://api.github.com',\n  headers: {\n    Authorization: `bearer ${process.env.REACT_APP_GITHUB_ACCESS_TOKEN}`\n  }\n});\n\nconst fetchData = async setData => {\n  const QUERY_ORGANIZATION = `query QueryForBeginers (\n        $orgName: String!\n    ) {\n        organization(login: $orgName) {\n            name\n            url\n        }\n      }\n    }`;\n  const {\n    data\n  } = await api.get('/graphql', {\n    query: QUERY_ORGANIZATION,\n    orgName: \"facebook\"\n  });\n  setData(data);\n};\n\nfunction GithubGraphQL4() {\n  _s();\n\n  let [data, setData] = useState(null);\n  let flag = true;\n  useEffect(() => {\n    fetchData(setData);\n  }, [flag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [\"UserData:\", data && JSON.stringify(data, null, 4)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GithubGraphQL4, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = GithubGraphQL4;\nexport default GithubGraphQL4;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubGraphQL4\");","map":{"version":3,"sources":["/home/asad/Cloud-Computing/Quarter 3/Class 04 01-august-2021/2. API_with_react_with_graphql/src/githubGraphQL4.js"],"names":["useState","useEffect","axios","api","create","method","responseType","baseURL","headers","Authorization","process","env","REACT_APP_GITHUB_ACCESS_TOKEN","fetchData","setData","QUERY_ORGANIZATION","data","get","query","orgName","GithubGraphQL4","flag","JSON","stringify"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACrBC,EAAAA,MAAM,EAAE,KADa;AAErBC,EAAAA,YAAY,EAAE,MAFO;AAGrBC,EAAAA,OAAO,EAAE,wBAHY;AAIrBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAG,UAASC,OAAO,CAACC,GAAR,CAAYC,6BAA8B;AAD9D;AAJY,CAAb,CAAZ;;AASA,MAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;AACjC,QAAMC,kBAAkB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MARI;AASA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMb,GAAG,CAACc,GAAJ,CACnB,UADmB,EAEnB;AACIC,IAAAA,KAAK,EAAEH,kBADX;AAEII,IAAAA,OAAO,EAAE;AAFb,GAFmB,CAAvB;AAOAL,EAAAA,OAAO,CAACE,IAAD,CAAP;AACH,CAlBD;;AAoBA,SAASI,cAAT,GAA0B;AAAA;;AACtB,MAAI,CAACJ,IAAD,EAAOF,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAA9B;AACA,MAAIqB,IAAI,GAAG,IAAX;AAEApB,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,SAAS,CAACC,OAAD,CAAT;AACH,GAFQ,EAEN,CAACO,IAAD,CAFM,CAAT;AAIA,sBACI;AAAA,2BACI;AAAA,8BAEML,IAAI,IAAIM,IAAI,CAACC,SAAL,CAAeP,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAhBQI,c;;KAAAA,c;AAiBT,eAAeA,cAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst api = axios.create({\n    method: 'get',\n    responseType: 'json',\n    baseURL: 'https://api.github.com',\n    headers: {\n        Authorization: `bearer ${process.env.REACT_APP_GITHUB_ACCESS_TOKEN}`\n    }\n});\n\nconst fetchData = async (setData) => {\n    const QUERY_ORGANIZATION = `query QueryForBeginers (\n        $orgName: String!\n    ) {\n        organization(login: $orgName) {\n            name\n            url\n        }\n      }\n    }`\n    const { data } = await api.get(\n        '/graphql',\n        { \n            query: QUERY_ORGANIZATION,\n            orgName: \"facebook\" \n        }\n    );\n    setData(data);\n}\n\nfunction GithubGraphQL4() {\n    let [data, setData] = useState(null);\n    let flag = true;\n\n    useEffect(()=>{\n        fetchData(setData);\n    }, [flag]);\n    \n    return(\n        <div>\n            <pre>\n                UserData:\n                { data && JSON.stringify(data, null, 4)}\n            </pre>\n        </div>\n    );\n}\nexport default GithubGraphQL4;"]},"metadata":{},"sourceType":"module"}