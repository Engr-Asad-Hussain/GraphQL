{"ast":null,"code":"var _jsxFileName = \"/home/asad/Cloud-Computing/Quarter 3/Class 04 01-august-2021/2. API_with_react_with_graphql/src/githubGraphQL2.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst instance = axios.create({\n  method: 'get',\n  responseType: 'json',\n  baseURL: 'https://api.github.com',\n  headers: {\n    Authorization: `bearer ${process.env.REACT_APP_GITHUB_ACCESS_TOKEN}`\n  }\n});\n\nconst fetchData = async setData => {\n  const QUERY_ORGANIZATION = `query queryForOrganization {\n        organization(login: \"facebook\") {\n            name\n            email\n            id\n            url\n            description\n        }\n    }`;\n  const {\n    data\n  } = await instance.post('/graphql', {\n    query: QUERY_ORGANIZATION\n  });\n  setData(data);\n};\n\nfunction GithubGraphQL2() {\n  _s();\n\n  let [data, setData] = useState(null);\n  console.log(\"GraphQL # 02\");\n  useEffect(() => {\n    fetchData(setData);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [\"User Data:\", data && JSON.stringify(data, null, 4)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GithubGraphQL2, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = GithubGraphQL2;\nexport default GithubGraphQL2;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubGraphQL2\");","map":{"version":3,"sources":["/home/asad/Cloud-Computing/Quarter 3/Class 04 01-august-2021/2. API_with_react_with_graphql/src/githubGraphQL2.js"],"names":["useState","useEffect","axios","instance","create","method","responseType","baseURL","headers","Authorization","process","env","REACT_APP_GITHUB_ACCESS_TOKEN","fetchData","setData","QUERY_ORGANIZATION","data","post","query","GithubGraphQL2","console","log","JSON","stringify"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,MAAM,EAAE,KADkB;AAE1BC,EAAAA,YAAY,EAAE,MAFY;AAG1BC,EAAAA,OAAO,EAAE,wBAHiB;AAI1BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAG,UAASC,OAAO,CAACC,GAAR,CAAYC,6BAA8B;AAD9D;AAJiB,CAAb,CAAjB;;AASA,MAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;AACjC,QAAMC,kBAAkB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MARI;AASA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMb,QAAQ,CAACc,IAAT,CACnB,UADmB,EAEnB;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAFmB,CAAvB;AAIAD,EAAAA,OAAO,CAACE,IAAD,CAAP;AACH,CAfD;;AAkBA,SAASG,cAAT,GAA0B;AAAA;;AACtB,MAAI,CAACH,IAAD,EAAOF,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAA9B;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEApB,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,SAAS,CAACC,OAAD,CAAT;AACH,GAFQ,CAAT;AAIA,sBACI;AAAA,2BACI;AAAA,+BAEME,IAAI,IAAIM,IAAI,CAACC,SAAL,CAAeP,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAhBQG,c;;KAAAA,c;AAiBT,eAAeA,cAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst instance = axios.create({\n    method: 'get',\n    responseType: 'json',\n    baseURL: 'https://api.github.com',\n    headers: {\n        Authorization: `bearer ${process.env.REACT_APP_GITHUB_ACCESS_TOKEN}`\n    }\n});\n\nconst fetchData = async (setData) => {\n    const QUERY_ORGANIZATION = `query queryForOrganization {\n        organization(login: \"facebook\") {\n            name\n            email\n            id\n            url\n            description\n        }\n    }`\n    const { data } = await instance.post(\n        '/graphql',\n        { query: QUERY_ORGANIZATION }\n    );\n    setData(data);\n}\n\n\nfunction GithubGraphQL2() {\n    let [data, setData] = useState(null);\n    console.log(\"GraphQL # 02\");\n\n    useEffect(()=>{\n        fetchData(setData);\n    });\n\n    return (\n        <div>\n            <pre>\n                User Data:\n                { data && JSON.stringify(data, null, 4)}\n            </pre>\n        </div>\n    );\n}\nexport default GithubGraphQL2;"]},"metadata":{},"sourceType":"module"}